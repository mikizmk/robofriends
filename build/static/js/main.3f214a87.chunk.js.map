{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","className","alt","src","id","CardList","robots","cardComponent","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAgBeA,EAdF,SAACC,GACb,IAAQC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,MACd,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAAMM,GAAhC,cACrB,gCACC,6BAAKL,IACL,4BAAIC,WCcOK,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEZC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACvC,OACC,cAAC,EAAD,CAECN,GAAIE,EAAOI,GAAGN,GACdL,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAMR,OACC,8BACKH,KCFQI,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKZ,UAAU,OAAf,SACA,uBACCA,UAAU,mCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEEI,EARA,SAACnB,GACf,OACC,qBAAKoB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACEvB,EAAMwB,YCwCKC,G,wDArCd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAbzC,EAAKC,MAAO,CACXxB,OAAQ,GACRqB,YAAa,IAJD,E,qDAQd,WAAoB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAACpB,OAAO6B,S,oBAQrC,WAAW,IAAD,OACHC,EAAiBC,KAAKP,MAAMxB,OAAOgC,QAAO,SAAAhC,GAC/C,OAAOA,EAAOP,KAAKwC,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBAElE,OACA,sBAAKtC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWY,aAAcwB,KAAKb,iBAC9B,cAAC,EAAD,UAEC,cAAC,EAAD,CAAUlB,OAAS8B,a,GA9BLK,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3f214a87.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n\tconst { name, email} = props\n\treturn (\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${props.id}?200x200`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n\t\n\tconst cardComponent = robots.map((user, i) => {\n\t\treturn (\n\t\t\t<Card \n\t\t\t\tkey={i} \n\t\t\t\tid={robots[i].id} \n\t\t\t\tname={robots[i].name} \n\t\t\t\temail={robots[i].email}/>\n\t\t\t\t)\n\t})\n\treturn (\n\t\t<div>\n\t     {cardComponent}\n\t    </div>\n    )\n\n\n}\n\nexport default CardList;","import React from 'react';\nconst SearchBox = ({searchField, searchChange}) => {\n\treturn (\n\t\t<div className='pa2 '>\n\t\t<input \n\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\n\t\t\ttype='search' \n\t\t\tplaceholder='search robots' \n\t\t\tonChange={searchChange}\n\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height:'500px'}}>\n\t\t {props.children}\n\t\t</div>\n\t\t);\n};\n\nexport default Scroll;\n","import React, { Component } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport Scroll from './Scroll';\nimport './App.css'\n\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state= {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\t\n\t\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response=> response.json())\n\t\t.then(users=> this.setState({robots:users}));\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({searchfield: event.target.value})\t\n\t\t\n\t\t\n\t}\n\trender () {\n\t\tconst filteredRobots = this.state.robots.filter(robots =>{\n\t\t\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\t\t})\n\t\treturn (\n\t\t<div className='tc'>\n\t\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t<Scroll>\n\t\t\t\n\t\t\t\t<CardList robots={ filteredRobots } />\n\t\t\t\n\t\t\t</Scroll>\n\t\t</div>\n\t\t);\n\t}\n\t\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}